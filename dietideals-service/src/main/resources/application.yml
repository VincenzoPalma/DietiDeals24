spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ingswProva
    username: postgres
    password: 26102002
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: true
security:
  oauth2:
    client:
      registration:
        google:
          client-id: "80319647136-m6c5aqga238mhoglsb3jcnm244mdj0je.apps.googleusercontent.com"
          scope: openid,email,profile
          redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
      provider:
        google:
          authorization-uri: https://accounts.google.com/o/oauth2/auth
          token-uri: https://oauth2.googleapis.com/token
          user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
          user-name-attribute: sub

  firebase-props:
    enable-strict-server-session: false
    enable-check-session-revoked: false
    enable-logout-everywhere: false
    session-expiry-in-days: 5
    cookie-props:
      max-age-in-minutes: 7200
      http-only: true
      secure: true
      domain: localhost
      path: /
    allow-credentials: true
    allowed-origins:
      - http://localhost:8080
      - http://localhost:3000
    allowed-methods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
    allowed-headers:
      - Authorization
      - Origin
      - Content-Type
      - Accept
      - Accept-Encoding
      - Accept-Language
      - Access-Control-Allow-Origin
      - Access-Control-Allow-Headers
      - Access-Control-Request-Method
      - X-Requested-With
      - X-Auth-Token
      - X-Xsrf-Token
      - Cache-Control
      - Id-Token
    allowed-public-apis:
      - /favicon.ico
      - /session/login
      - /public/**
    exposed-headers:
      - X-Xsrf-Token

